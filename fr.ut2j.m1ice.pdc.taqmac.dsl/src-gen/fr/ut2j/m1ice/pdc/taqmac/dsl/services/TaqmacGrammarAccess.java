/*
 * generated by Xtext 2.14.0
 */
package fr.ut2j.m1ice.pdc.taqmac.dsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class TaqmacGrammarAccess extends AbstractGrammarElementFinder {
	
	public class ItineraireElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.ut2j.m1ice.pdc.taqmac.dsl.Taqmac.Itineraire");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cItineraireAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cItineraireKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cEntrepriseAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cEntrepriseEStringParserRuleCall_2_0 = (RuleCall)cEntrepriseAssignment_2.eContents().get(0);
		private final Assignment cDestinationAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDestinationDestinationParserRuleCall_3_0 = (RuleCall)cDestinationAssignment_3.eContents().get(0);
		private final Assignment cPlageHoraireAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cPlageHorairePlageHoraireParserRuleCall_4_0 = (RuleCall)cPlageHoraireAssignment_4.eContents().get(0);
		private final Keyword cTransportKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cModesTransportAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cModesTransportModeTransportParserRuleCall_6_0 = (RuleCall)cModesTransportAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cCommaKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cModesTransportAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cModesTransportModeTransportParserRuleCall_7_1_0 = (RuleCall)cModesTransportAssignment_7_1.eContents().get(0);
		private final Keyword cAffichageKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cModesAffichageAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cModesAffichageModeAffichageParserRuleCall_9_0 = (RuleCall)cModesAffichageAssignment_9.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cCommaKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cModesAffichageAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cModesAffichageModeAffichageParserRuleCall_10_1_0 = (RuleCall)cModesAffichageAssignment_10_1.eContents().get(0);
		
		//Itineraire:
		//	{Itineraire}
		//	'Itineraire'
		//	entreprise=EString
		//	destination=Destination
		//	plageHoraire=PlageHoraire
		//	'transport' modesTransport+=ModeTransport ("," modesTransport+=ModeTransport)*
		//	'affichage' modesAffichage+=ModeAffichage ("," modesAffichage+=ModeAffichage)*;
		@Override public ParserRule getRule() { return rule; }
		
		//{Itineraire} 'Itineraire' entreprise=EString destination=Destination plageHoraire=PlageHoraire 'transport'
		//modesTransport+=ModeTransport ("," modesTransport+=ModeTransport)* 'affichage' modesAffichage+=ModeAffichage (","
		//modesAffichage+=ModeAffichage)*
		public Group getGroup() { return cGroup; }
		
		//{Itineraire}
		public Action getItineraireAction_0() { return cItineraireAction_0; }
		
		//'Itineraire'
		public Keyword getItineraireKeyword_1() { return cItineraireKeyword_1; }
		
		//entreprise=EString
		public Assignment getEntrepriseAssignment_2() { return cEntrepriseAssignment_2; }
		
		//EString
		public RuleCall getEntrepriseEStringParserRuleCall_2_0() { return cEntrepriseEStringParserRuleCall_2_0; }
		
		//destination=Destination
		public Assignment getDestinationAssignment_3() { return cDestinationAssignment_3; }
		
		//Destination
		public RuleCall getDestinationDestinationParserRuleCall_3_0() { return cDestinationDestinationParserRuleCall_3_0; }
		
		//plageHoraire=PlageHoraire
		public Assignment getPlageHoraireAssignment_4() { return cPlageHoraireAssignment_4; }
		
		//PlageHoraire
		public RuleCall getPlageHorairePlageHoraireParserRuleCall_4_0() { return cPlageHorairePlageHoraireParserRuleCall_4_0; }
		
		//'transport'
		public Keyword getTransportKeyword_5() { return cTransportKeyword_5; }
		
		//modesTransport+=ModeTransport
		public Assignment getModesTransportAssignment_6() { return cModesTransportAssignment_6; }
		
		//ModeTransport
		public RuleCall getModesTransportModeTransportParserRuleCall_6_0() { return cModesTransportModeTransportParserRuleCall_6_0; }
		
		//("," modesTransport+=ModeTransport)*
		public Group getGroup_7() { return cGroup_7; }
		
		//","
		public Keyword getCommaKeyword_7_0() { return cCommaKeyword_7_0; }
		
		//modesTransport+=ModeTransport
		public Assignment getModesTransportAssignment_7_1() { return cModesTransportAssignment_7_1; }
		
		//ModeTransport
		public RuleCall getModesTransportModeTransportParserRuleCall_7_1_0() { return cModesTransportModeTransportParserRuleCall_7_1_0; }
		
		//'affichage'
		public Keyword getAffichageKeyword_8() { return cAffichageKeyword_8; }
		
		//modesAffichage+=ModeAffichage
		public Assignment getModesAffichageAssignment_9() { return cModesAffichageAssignment_9; }
		
		//ModeAffichage
		public RuleCall getModesAffichageModeAffichageParserRuleCall_9_0() { return cModesAffichageModeAffichageParserRuleCall_9_0; }
		
		//("," modesAffichage+=ModeAffichage)*
		public Group getGroup_10() { return cGroup_10; }
		
		//","
		public Keyword getCommaKeyword_10_0() { return cCommaKeyword_10_0; }
		
		//modesAffichage+=ModeAffichage
		public Assignment getModesAffichageAssignment_10_1() { return cModesAffichageAssignment_10_1; }
		
		//ModeAffichage
		public RuleCall getModesAffichageModeAffichageParserRuleCall_10_1_0() { return cModesAffichageModeAffichageParserRuleCall_10_1_0; }
	}
	public class DestinationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.ut2j.m1ice.pdc.taqmac.dsl.Taqmac.Destination");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDestinationAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAdresseKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cAdresseAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAdresseEStringParserRuleCall_2_0 = (RuleCall)cAdresseAssignment_2.eContents().get(0);
		
		//Destination:
		//	{Destination}
		//	'adresse' adresse=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//{Destination} 'adresse' adresse=EString
		public Group getGroup() { return cGroup; }
		
		//{Destination}
		public Action getDestinationAction_0() { return cDestinationAction_0; }
		
		//'adresse'
		public Keyword getAdresseKeyword_1() { return cAdresseKeyword_1; }
		
		//adresse=EString
		public Assignment getAdresseAssignment_2() { return cAdresseAssignment_2; }
		
		//EString
		public RuleCall getAdresseEStringParserRuleCall_2_0() { return cAdresseEStringParserRuleCall_2_0; }
	}
	public class PlageHoraireElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.ut2j.m1ice.pdc.taqmac.dsl.Taqmac.PlageHoraire");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPlageHoraireAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cHorairesKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cDebutKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cDebutAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDebutEStringParserRuleCall_3_0 = (RuleCall)cDebutAssignment_3.eContents().get(0);
		private final Keyword cFinKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cFinAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cFinEStringParserRuleCall_5_0 = (RuleCall)cFinAssignment_5.eContents().get(0);
		
		//PlageHoraire:
		//	{PlageHoraire}
		//	'horaires'
		//	'debut' debut=EString
		//	'fin' fin=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//{PlageHoraire} 'horaires' 'debut' debut=EString 'fin' fin=EString
		public Group getGroup() { return cGroup; }
		
		//{PlageHoraire}
		public Action getPlageHoraireAction_0() { return cPlageHoraireAction_0; }
		
		//'horaires'
		public Keyword getHorairesKeyword_1() { return cHorairesKeyword_1; }
		
		//'debut'
		public Keyword getDebutKeyword_2() { return cDebutKeyword_2; }
		
		//debut=EString
		public Assignment getDebutAssignment_3() { return cDebutAssignment_3; }
		
		//EString
		public RuleCall getDebutEStringParserRuleCall_3_0() { return cDebutEStringParserRuleCall_3_0; }
		
		//'fin'
		public Keyword getFinKeyword_4() { return cFinKeyword_4; }
		
		//fin=EString
		public Assignment getFinAssignment_5() { return cFinAssignment_5; }
		
		//EString
		public RuleCall getFinEStringParserRuleCall_5_0() { return cFinEStringParserRuleCall_5_0; }
	}
	public class ModeTransportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.ut2j.m1ice.pdc.taqmac.dsl.Taqmac.ModeTransport");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cModeTransportAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTypeTypeTransportTerminalRuleCall_1_0 = (RuleCall)cTypeAssignment_1.eContents().get(0);
		
		//ModeTransport:
		//	{ModeTransport} type=typeTransport;
		@Override public ParserRule getRule() { return rule; }
		
		//{ModeTransport} type=typeTransport
		public Group getGroup() { return cGroup; }
		
		//{ModeTransport}
		public Action getModeTransportAction_0() { return cModeTransportAction_0; }
		
		//type=typeTransport
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }
		
		//typeTransport
		public RuleCall getTypeTypeTransportTerminalRuleCall_1_0() { return cTypeTypeTransportTerminalRuleCall_1_0; }
	}
	public class ModeAffichageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.ut2j.m1ice.pdc.taqmac.dsl.Taqmac.ModeAffichage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cModeAffichageAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTypeTypeAffichageTerminalRuleCall_1_0 = (RuleCall)cTypeAssignment_1.eContents().get(0);
		
		//ModeAffichage:
		//	{ModeAffichage} type=typeAffichage;
		@Override public ParserRule getRule() { return rule; }
		
		//{ModeAffichage} type=typeAffichage
		public Group getGroup() { return cGroup; }
		
		//{ModeAffichage}
		public Action getModeAffichageAction_0() { return cModeAffichageAction_0; }
		
		//type=typeAffichage
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }
		
		//typeAffichage
		public RuleCall getTypeTypeAffichageTerminalRuleCall_1_0() { return cTypeTypeAffichageTerminalRuleCall_1_0; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.ut2j.m1ice.pdc.taqmac.dsl.Taqmac.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString:
		//	STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	
	
	private final ItineraireElements pItineraire;
	private final DestinationElements pDestination;
	private final PlageHoraireElements pPlageHoraire;
	private final ModeTransportElements pModeTransport;
	private final ModeAffichageElements pModeAffichage;
	private final TerminalRule tTypeTransport;
	private final TerminalRule tTypeAffichage;
	private final EStringElements pEString;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public TaqmacGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pItineraire = new ItineraireElements();
		this.pDestination = new DestinationElements();
		this.pPlageHoraire = new PlageHoraireElements();
		this.pModeTransport = new ModeTransportElements();
		this.pModeAffichage = new ModeAffichageElements();
		this.tTypeTransport = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "fr.ut2j.m1ice.pdc.taqmac.dsl.Taqmac.typeTransport");
		this.tTypeAffichage = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "fr.ut2j.m1ice.pdc.taqmac.dsl.Taqmac.typeAffichage");
		this.pEString = new EStringElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("fr.ut2j.m1ice.pdc.taqmac.dsl.Taqmac".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Itineraire:
	//	{Itineraire}
	//	'Itineraire'
	//	entreprise=EString
	//	destination=Destination
	//	plageHoraire=PlageHoraire
	//	'transport' modesTransport+=ModeTransport ("," modesTransport+=ModeTransport)*
	//	'affichage' modesAffichage+=ModeAffichage ("," modesAffichage+=ModeAffichage)*;
	public ItineraireElements getItineraireAccess() {
		return pItineraire;
	}
	
	public ParserRule getItineraireRule() {
		return getItineraireAccess().getRule();
	}
	
	//Destination:
	//	{Destination}
	//	'adresse' adresse=EString;
	public DestinationElements getDestinationAccess() {
		return pDestination;
	}
	
	public ParserRule getDestinationRule() {
		return getDestinationAccess().getRule();
	}
	
	//PlageHoraire:
	//	{PlageHoraire}
	//	'horaires'
	//	'debut' debut=EString
	//	'fin' fin=EString;
	public PlageHoraireElements getPlageHoraireAccess() {
		return pPlageHoraire;
	}
	
	public ParserRule getPlageHoraireRule() {
		return getPlageHoraireAccess().getRule();
	}
	
	//ModeTransport:
	//	{ModeTransport} type=typeTransport;
	public ModeTransportElements getModeTransportAccess() {
		return pModeTransport;
	}
	
	public ParserRule getModeTransportRule() {
		return getModeTransportAccess().getRule();
	}
	
	//ModeAffichage:
	//	{ModeAffichage} type=typeAffichage;
	public ModeAffichageElements getModeAffichageAccess() {
		return pModeAffichage;
	}
	
	public ParserRule getModeAffichageRule() {
		return getModeAffichageAccess().getRule();
	}
	
	//terminal typeTransport:
	//	"Tisseo" | "Voiture" | "Pieton" | "Velo";
	public TerminalRule getTypeTransportRule() {
		return tTypeTransport;
	}
	
	//terminal typeAffichage:
	//	'Carte' | 'Texte';
	public TerminalRule getTypeAffichageRule() {
		return tTypeAffichage;
	}
	
	//EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
